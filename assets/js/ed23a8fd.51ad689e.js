"use strict";(self.webpackChunkm_365_tech=self.webpackChunkm_365_tech||[]).push([[176],{1206:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>h});var o=t(4848),r=t(8453);const l={slug:"bulk-change-the-owner-of-power-automate-flows-using-powershell",title:"Bulk change the owner of Power Automate flows using PowerShell",authors:["markd"],tags:["PowerAutomate","PowerShell"]},i=void 0,s={permalink:"/bulk-change-the-owner-of-power-automate-flows-using-powershell",source:"@site/blog/2024-07-01-Change-the-owner-of-Power-Automate-flows-using-PowerShell/index.md",title:"Bulk change the owner of Power Automate flows using PowerShell",description:"One of the operational task that many M365 admins is to maintain a current inventory of all Power Automate flows living inside their tenants. The real problem though is everytime a tenant user creates a new flow, tenant admins doesn't have the direct access to view/modify those flows. And if that particular user leaves the company there would be an unmonitored flow that may break without anyone being notified.",date:"2024-07-01T00:00:00.000Z",tags:[{inline:!1,label:"Power Automate",permalink:"/tags/powerautomate",description:"blog post related to Power Automate"},{inline:!1,label:"PowerShell",permalink:"/tags/powershell",description:"blog post related to PowerShell"}],readingTime:2.575,hasTruncateMarker:!0,authors:[{name:"Mark Doria",title:"M365 Engineer",url:"https://github.com/m365-tech",imageURL:"https://github.com/m365-tech.png",key:"markd"}],frontMatter:{slug:"bulk-change-the-owner-of-power-automate-flows-using-powershell",title:"Bulk change the owner of Power Automate flows using PowerShell",authors:["markd"],tags:["PowerAutomate","PowerShell"]},unlisted:!1},a={authorsImageUrls:[void 0]},h=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Manual through UI",id:"manual-through-ui",level:2},{value:"Automate using PowerShell",id:"automate-using-powershell",level:2},{value:"Install Modules",id:"install-modules",level:3},{value:"Script Composition",id:"script-composition",level:3},{value:"Define UPN",id:"define-upn",level:4},{value:"Get ObjectID in Azure AD",id:"get-objectid-in-azure-ad",level:4},{value:"Get All FLOWS",id:"get-all-flows",level:4},{value:"Traverse each flow",id:"traverse-each-flow",level:4},{value:"Combining everything",id:"combining-everything",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"One of the operational task that many M365 admins is to maintain a current inventory of all Power Automate flows living inside their tenants. The real problem though is everytime a tenant user creates a new flow, tenant admins doesn't have the direct access to view/modify those flows. And if that particular user leaves the company there would be an unmonitored flow that may break without anyone being notified."}),"\n",(0,o.jsx)(n.p,{children:"In this post, we will discuss how to add/change the Power Automate Owners using powershell."}),"\n",(0,o.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["At a minimum, ",(0,o.jsx)(n.strong,{children:"Power Platform Admin"})," role is needed to execute the steps below."]})}),"\n",(0,o.jsx)(n.h2,{id:"manual-through-ui",children:"Manual through UI"}),"\n",(0,o.jsxs)(n.p,{children:["As an admin, you can go to ",(0,o.jsx)(n.a,{href:"https://pp.cmd.ms",children:"Power Platform Admin"})," > Environments > Select Environment > Under Resources > Select Flows and you will be presented with all the flows in your environment. You can individually share or enable these flows using this screen."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Power Platform Admin Flow List",src:t(5453).A+"",width:"1359",height:"1036"})}),"\n",(0,o.jsx)(n.h2,{id:"automate-using-powershell",children:"Automate using PowerShell"}),"\n",(0,o.jsx)(n.h3,{id:"install-modules",children:"Install Modules"}),"\n",(0,o.jsx)(n.p,{children:"You first need to install the required modules."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:"Install-Module -Name AzureAD -Scope CurrentUser\nInstall-Module -Name Microsoft.PowerApps.Administration.PowerShell -Scope CurrentUser\nInstall-Module -Name Microsoft.PowerApps.PowerShell -Scope CurrentUser\n"})}),"\n",(0,o.jsx)(n.h3,{id:"script-composition",children:"Script Composition"}),"\n",(0,o.jsx)(n.h4,{id:"define-upn",children:"Define UPN"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:"#Define User Principal Name of the new owner\n$upn = username@tenant.com\n"})}),"\n",(0,o.jsx)(n.h4,{id:"get-objectid-in-azure-ad",children:"Get ObjectID in Azure AD"}),"\n",(0,o.jsx)(n.p,{children:"Login using the Power Platform Admin user account"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:"#Get Object ID of new owner\nConnect-AzureAd\n$adUser = Get-AzureAdUser -ObjectID $upn | Select-Object ObjectId\n"})}),"\n",(0,o.jsx)(n.h4,{id:"get-all-flows",children:"Get All FLOWS"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:'#Get ALL flows accessible to Power Platform Admin\n$flows = Get-AdminFlow\nWrite-Host -f Magenta "$($flows.Count) flows accessible to current user"\n'})}),"\n",(0,o.jsx)(n.h4,{id:"traverse-each-flow",children:"Traverse each flow"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["Each time we run a ",(0,o.jsx)(n.strong,{children:'"Request sign off"'})," in a SharePoint Library, a new flow is created in the environment (shown ",(0,o.jsx)(n.a,{href:"/bulk-change-the-owner-of-power-automate-flows-using-powershell#manual-through-ui",children:"above"}),"). We don't need to change ownership of that flow hence we check the display name when we traverse."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:'#Traverse each flow and add new user as Owner for each\nforeach ($flow in $flows) {\n    // highlight-next-line\n    if ($flow.DisplayName -ne "Request sign-off") {\n        Write-Host -f Yellow "Adding user $upn to $($flow.DisplayName)"\n        Set-AdminFlowOwnerRole `\n            -EnvironmentName $flow.EnvironmentName `\n            -FlowName $flow.FlowName `\n            -RoleName CanEdit `\n            -PrincipalType User `\n            -PrincipalObjectId $adUser.ObjectId\n        Write-Host -f Green "Successfully added $upn to $($flow.DisplayName)"\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"combining-everything",children:"Combining everything"}),"\n",(0,o.jsx)(n.p,{children:"Let's combine everything we have"}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["If you are using solutions in your environment, you need to make the new owner a ",(0,o.jsx)(n.strong,{children:"System Administrator for each environment"}),". If not, the script will get an ",(0,o.jsx)(n.strong,{children:"Error 403: Forbidden"}),"."]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:'#Define User Principal Name of the new owner\n$upn = username@tenant.com\n\n#Get Object ID of new owner\nConnect-AzureAd\n$adUser = Get-AzureAdUser -ObjectID $upn | Select-Object ObjectId\n\n#Get ALL flows accessible to Power Platform Admin\n$flows = Get-AdminFlow\nWrite-Host -f Magenta "$($flows.Count) flows accessible to current user"\n\n#Traverse each flow and add new user as Owner for each\nforeach ($flow in $flows) {\n    if ($flow.DisplayName -ne "Request sign-off") {\n        Write-Host -f Yellow "Adding user $upn to $($flow.DisplayName)"\n        Set-AdminFlowOwnerRole `\n            -EnvironmentName $flow.EnvironmentName `\n            -FlowName $flow.FlowName `\n            -RoleName CanEdit `\n            -PrincipalType User `\n            -PrincipalObjectId $adUser.ObjectId\n        Write-Host -f Green "Successfully added $upn to $($flow.DisplayName)"\n    }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},5453:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/ppadm-flow-list-6b22b1213871c76730f252d3ab3ec417.jpg"},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var o=t(6540);const r={},l=o.createContext(r);function i(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);